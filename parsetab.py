
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COMMA LPAREN NAME NIL NUMBER QUOTE RPAREN STRINGstart : statementstatement : NUMBER\n                | NILstatement : STRINGstatement : NAMEstatement : QUOTE statementstatement : COMMA statementstatement : expressionexpression : listlist : LPAREN element RPARENelement : element statementelement : statement'
    
_lr_action_items = {'NUMBER':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,],[3,-2,-3,-4,-5,3,3,-8,-9,3,-6,-7,3,-12,-10,-11,]),'NIL':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,],[4,-2,-3,-4,-5,4,4,-8,-9,4,-6,-7,4,-12,-10,-11,]),'STRING':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,],[5,-2,-3,-4,-5,5,5,-8,-9,5,-6,-7,5,-12,-10,-11,]),'NAME':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,],[6,-2,-3,-4,-5,6,6,-8,-9,6,-6,-7,6,-12,-10,-11,]),'QUOTE':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,],[7,-2,-3,-4,-5,7,7,-8,-9,7,-6,-7,7,-12,-10,-11,]),'COMMA':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,],[8,-2,-3,-4,-5,8,8,-8,-9,8,-6,-7,8,-12,-10,-11,]),'LPAREN':([0,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,],[11,-2,-3,-4,-5,11,11,-8,-9,11,-6,-7,11,-12,-10,-11,]),'$end':([1,2,3,4,5,6,9,10,12,13,16,],[0,-1,-2,-3,-4,-5,-8,-9,-6,-7,-10,]),'RPAREN':([3,4,5,6,9,10,12,13,14,15,16,17,],[-2,-3,-4,-5,-8,-9,-6,-7,16,-12,-10,-11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'statement':([0,7,8,11,14,],[2,12,13,15,17,]),'expression':([0,7,8,11,14,],[9,9,9,9,9,]),'list':([0,7,8,11,14,],[10,10,10,10,10,]),'element':([11,],[14,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> statement','start',1,'p_start','lis.py',207),
  ('statement -> NUMBER','statement',1,'p_atomic','lis.py',213),
  ('statement -> NIL','statement',1,'p_atomic','lis.py',214),
  ('statement -> STRING','statement',1,'p_string','lis.py',219),
  ('statement -> NAME','statement',1,'p_lookup','lis.py',223),
  ('statement -> QUOTE statement','statement',2,'p_quoted','lis.py',230),
  ('statement -> COMMA statement','statement',2,'p_commad','lis.py',234),
  ('statement -> expression','statement',1,'p_statement_expr','lis.py',238),
  ('expression -> list','expression',1,'p_expression_list','lis.py',243),
  ('list -> LPAREN element RPAREN','list',3,'p_list_parens','lis.py',251),
  ('element -> element statement','element',2,'p_element','lis.py',255),
  ('element -> statement','element',1,'p_base','lis.py',261),
]
